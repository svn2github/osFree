/**************************************************************************
 *
 *  Copyright 2015, 2017, 2018, Yuri Prokushev
 *
 *  This file is part of osFree project
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */

#ifndef sctdef_idl
#define sctdef_idl

#include <sccommon.idl>
interface SOMTTypedefEntryC : SOMTEntryC
{
readonly attribute SOMTEntryC somtTypedefType;
// The type of the typedef. This does not include pointer stars or
// array declarators.   These must be obtained by examining each
// of the declarators.

SOMTCommonEntryC somtGetFirstDeclarator();
// The first declarator for this typedef.
// Declarators of struct members will be instances of SOMTDataEntryC, 
// while declarators of typedefs will be instances of SOMTUserDefinedTypeEntryC.

SOMTCommonEntryC somtGetNextDeclarator();
// The next declarator for this typedef, relative to the previous 
// call to this method or somtGetFirstDeclarator.
// Declarators of struct members will be instances of SOMTDataEntryC, 
// while declarators of typedefs will be instances of SOMTUserDefinedTypeEntryC.

#ifdef __SOMIDL__
  implementation {
    releaseorder: _get_somtTypedefType, 
		  somtGetFirstDeclarator, somtGetNextDeclarator;
  
    //# Class Modifiers
    majorversion = 2;
    minorversion = 2; // 1->2 when override _get_somtTypeCode
    filestem = sctdef;
#ifdef _WIN32
    dllname = "some.dll";
#endif
    callstyle = oidl;
  
    //# Method Modifiers
    //somtSetSymbolsOnEntry: override;
    //somDumpSelfInt: override;
  
    //# Attribute Modifiers
    somtTypedefType: nodata;
    _get_somtTypeCode: override;

  };
#endif /* __SOMIDL__ */
};


#endif  /* sctdef_idl */
