/**************************************************************************
 *
 *  Copyright 2015, 2017, 2018, Yuri Prokushev
 *
 *  This file is part of osFree project
 *
 *  This program is free software: you can redistribute it and/or modify it
 *  under the terms of the GNU Lesser General Public License as published by the
 *  Free Software Foundation, either version 3 of the License, or (at your
 *  option) any later version.
 * 
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>
 *
 */

#ifndef scparm_idl
#define scparm_idl

#include <sccommon.idl>
enum somtParameterDirectionT {somtInE, somtOutE,somtInOutE};
interface SOMTParameterEntryC : SOMTCommonEntryC
{
  readonly attribute somtParameterDirectionT somtParameterDirection;
  // The direction for this parameter. (somtInE, somtOutE, or somtInOutE).

  readonly attribute string somtIDLParameterDeclaration;
  // The IDL declaration of the parameter, including the type and name.

  readonly attribute string somtCParameterDeclaration;
  // The declaration for the parameter within a C method procedure prototype.
  // It includes the parameter's type and name.
  // This may differ from the parameter's IDL declaration.
  // In particular, pointer stars may be added.

  readonly attribute string somtPascalParameterDeclaration;
  // The declaration for the parameter within a Pascal method procedure prototype.
  // It includes the parameter's type and name.
  // This may differ from the parameter's IDL declaration.
  // In particular, pointer stars may be added.

#ifdef __SOMIDL__
  implementation {
    releaseorder: _get_somtParameterDirection, _get_somtCParameterDeclaration,
		_get_somtIDLParameterDeclaration, _get_somtPascalParameterDeclaration;
  
    passthru C_h = "typedef enum somtParameterDirectionT {somtInE,somtOutE,somtInOutE} somtParameterDirectionT;";
    passthru C_xh = "typedef enum somtParameterDirectionT {somtInE,somtOutE,somtInOutE} somtParameterDirectionT;";

    //# Class Modifiers
    majorversion = 2;
    minorversion = 1;
    filestem = scparm;
#ifdef _WIN32
    dllname = "some.dll";
#endif
    callstyle = oidl;
  
    //# Method Modifiers
    somtSetSymbolsOnEntry: override;
    somDumpSelfInt: override;
  
    //# Attribute modifiers
    somtParameterDirection: nodata;
    somtCParameterDeclaration: nodata;
    somtIDLParameterDeclaration: nodata;
    somtPascalParameterDeclaration: nodata;
  };
#endif /* __SOMIDL__ */
};


#endif  /* scparm_idl */
